j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
cat("row_id = ", row_id, " sum = ", sum, "\n")
}
sum <- sum + minimum
su
sum
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
m <- m - m[, 1]
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
cat("row_id = ", row_id, " sum = ", sum, "\n")
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(m)
m <- m - m[, 1]
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
cat("row_id = ", row_id, " sum = ", sum, "\n")
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
m <- m - m[, 1]
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
cat("row_id = ", row_id, " sum = ", sum, "\n")
}
sum <- sum + minimum
sum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
cat("row_id = ", row_id, " sum = ", sum, "\n")
}
sum <- sum + minimum
sum
N <- readinteger()
N <- readinteger()
K <- readinteger()
m <- matrix(0, nrow=K, ncol=N)
for(i in 1:K) {
for(j in 1:N) {
m[i, j] <- readinteger()
}
}
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
}
sum <- sum + minimum
sum
n <- matrix(c(1, 4, 1, 3, 2, 2, 2, 1, 2, 1, 4, 2), nrow=3, byrow=TRUE)
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
print(m)
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
row_id <- new_row_id
if(changed > 0) {
sum = sum + prev_min
print(m)
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
print(sum)
print(m)
j <- i-1
}
changed <- changed + 1
}
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
if(changed > 0) {
sum = sum + prev_min
print(m)
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
cat("row_id = ", row_id, "\n")
print(m)
j <- i-1
}
changed <- changed + 1
}
row_id <- new_row_id
prev_min <- minimum
}
sum <- sum + minimum
sum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
if(changed > 0) {
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
cat("sum = ", sum, "\n")
cat("row_id = ", row_id, "\n")
print(m)
j <- i-1
}
changed <- changed + 1
}
row_id <- new_row_id
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
if(changed > 0) {
cat("prev_min = ", prev_min, "\n")
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
cat("sum = ", sum, "\n")
cat("row_id = ", row_id, "\n")
print(m)
j <- i-1
}
changed <- changed + 1
}
row_id <- new_row_id
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
if(changed > 0) {
cat("prev_min = ", prev_min, "\n")
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
cat("new_min = ", new_min, "\n")
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
cat("sum = ", sum, "\n")
cat("row_id = ", row_id, "\n")
print(m)
j <- i-1
}
changed <- changed + 1
}
row_id <- new_row_id
prev_min <- minimum
}
sum <- sum + minimum
m <- n
m <- t(apply(m, 1, cumsum))
minimum <- min(m[, 1])
row_id <- which(m[, 1] == minimum)[1]
sum <- 0
j <- 0
prev_min <- minimum
changed <- 0
for(i in 2:ncol(m)) {
index <- i-j
minimum <- min(m[, index])
new_row_id <- which(m[, index] == minimum)
if(length(new_row_id) > 1) {
diff <- m[new_row_id, index] - m[new_row_id, index-1]
diff.min <- min(diff)
diff.id <- which(m[new_row_id, index] - m[new_row_id, index-1] == diff.min)[1]
new_row_id <- diff.id
}
if(new_row_id != row_id) {
if(changed > 0) {
cat("prev_min = ", prev_min, "\n")
sum = sum + prev_min
m <- m - m[, index-1]
minimum <- m[row_id, index]
cat("new_min = ", minimum, "\n")
m <- matrix(m[, -(1:(index-1))], ncol=ncol(m)-(index-1))
m <- matrix(m[-row_id, ], nrow=nrow(m)-1)
cat("sum = ", sum, "\n")
cat("row_id = ", row_id, "\n")
print(m)
j <- i-1
}
changed <- changed + 1
}
row_id <- new_row_id
prev_min <- minimum
}
sum <- sum + minimum
setwd('Documents/ML/Assignment3/p8')
suppressMessages(library(R.matlab))
suppressMessages(library(Brobdingnag))
suppressMessages(library(mixtools))
source('GaussianMixture.R')
source('LikelihoodProbability.R')
source('Predict.R')
data <- readMat('../datasets/mnist_all.mat')
# Sample and partition data into training and testing data
train.data <- NULL
test.data <- NULL
for(i in 1:10) {
# Combine previous training and testing data
temp <- data.frame(matrix(c(data[2*(i-1) + 1][[1]], data[2*i][[1]]), ncol=784))
temp <- temp[sample(1:nrow(temp), 200), ]
temp <- rbind(temp, rep(i-1, nrow(temp)))
temp <- cbind(temp, rep(i-1, nrow(temp))) # Add class label as the last field
train <- sample(1:nrow(temp), nrow(temp)/2)
test <- -train
train.data <- rbind(train.data, temp[train, ])
test.data <- rbind(test.data, temp[test, ])
}
rm(data, temp, test, train) # Remove unnecessary variables
colnames(train.data)[785] <- "class"
colnames(test.data)[785] <- "class"
train.data <- as.matrix(train.data)
test.data <- as.matrix(test.data)
params <- array(list(), 10) # List to store parameters for each class
# Compute parameters for each class
for(i in 1:10) {
x <- train.data[which(train.data[, "class"] == (i-1)), 1:784]
params[[i]] <- GaussianMixture(x)
}
